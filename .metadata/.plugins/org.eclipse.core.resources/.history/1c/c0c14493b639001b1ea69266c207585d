import components.naturalnumber.NaturalNumber;
import components.queue.Queue;
import components.queue.Queue1L;
import components.simplereader.SimpleReader;
import components.simplereader.SimpleReader1L;
import components.simplewriter.SimpleWriter;
import components.simplewriter.SimpleWriter1L;

/**
 * Put a short phrase describing the program here.
 *
 * @author Put your name here
 *
 */
public final class ProgramWithIOAndStaticMethod {

    /**
     * Private constructor so this utility class cannot be instantiated.
     */
    private ProgramWithIOAndStaticMethod() {
    }

    /**
     * Put a short phrase describing the static method myMethod here.
     */
    private static void myMethod(Queue<NaturalNumber> q) {
        /*
         * Put your code for myMethod here
         */
        Queue<NaturalNumber> temp = q.newInstance();
        while (q.length() > 0) {
            NaturalNumber n = q.dequeue();
            n.add(n);
            temp.enqueue(n);
        }
        q.transferFrom(temp);
    }

    /**
     * Main method.
     *
     * @param args
     *            the command line arguments
     */
    public static void main(String[] args) {
        SimpleReader in = new SimpleReader1L();
        SimpleWriter out = new SimpleWriter1L();
        /*
         * Put your main program code here; it may call myMethod as shown
         */
        Queue<NaturalNumber> q = new Queue1L<>();
        myMethod(q);
        /*
         * Close input and output streams
         */
        out.println(q);
        in.close();
        out.close();
    }

}
